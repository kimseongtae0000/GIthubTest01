using System.Linq.Expressions;

namespace LinqExam03
{
    //p624
    class Person
    {
        public string Name { get; set; }
        public int Age { get; set; }
        public string Address { get; set; }

        public Person(string name, int age, string address)
        {
            Name = name;
            Age = age;
            Address = address;
        }
        public override string ToString()
        {
            return string.Format($"{Name}{Age}{Address}");
        }
    }
    class MainLanguage
    {
        public string Name { get; set; }
        public string Language { get; set; }

        public MainLanguage(string name, string language)
        {
            Name = name;
            Language = language;
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            List<Person> people = new List<Person>
            {
                new Person("tom", 63, "korea"),
                new Person("winnie", 40, "tibet"),
                new Person("anders", 47, "sudan"),
                new Person("hans", 25, "tibet"),
                new Person("eureka", 32, "sudan"),
                new Person("hawk", 15, "korea")
            };

            List<MainLanguage> languages = new List<MainLanguage>
            {
                new MainLanguage("anders", "delphi"),
                new MainLanguage("anders", "c#"),
                new MainLanguage("tom", "borland c++"),
                new MainLanguage("hans", "visual c++"),
                new MainLanguage("winnie", "r")
            };

            //var all = from personn in people
            //          select personn;

            //foreach (var item in all)
            //{
            //    Console.WriteLine($"{item.Name}: {item.Age} in {item.Address}");
            //    //Console.WriteLine(string.Join(Environment.NewLine, all));

            //    var nameList = from person in people
            //                   select person.Name;
            //}

            //foreach (var item in nameList)
            //{
            //    Console.WriteLine(item);
            //}

            //var nameList = people.Select((ElementInit) => elem.Name);   //확장메서드 표현 Lamda식

            //foreach (var name in nameList)
            //{
            //    Console.WriteLine(name);
            //}

            //var dataList = from person in people
            //               select new 
            //               {
            //                   Name = person.Name,
            //                   Year = DateTime.Now.AddYears(-person.Age).Year
            //               };
            //foreach (var item in dataList)
            //{
            //    Console.WriteLine($"{item.Name} - {item.Year}");
            //}

            var ageOver30 = from person in people
                            where person.Age > 30
                            select person;
            var addGroup = from person in people
                           group person by person.Address;
            foreach(var itemGroup in addGroup)
            {
                Console.WriteLine($"[{itemGroup.Key}]");
                foreach (var item in itemGroup)
                {
                    Console.WriteLine(item);
                }
                Console.WriteLine();
            }
        }
    }
}
