SELECT DEPTNO FROM EMP;
SELECT COUNT(*) FROM EMP;

SELECT DEPTNO,COUNT(*) FROM EMP
GROUP BY DEPTNO;

SELECT ENAME, COUNT(*) FROM EMP
GROUP BY ENAME;

SELECT JOB, MAX(SAL) FROM EMP
GROUP BY JOB;

SELECT JOB, DEPTNO, MAX(SAL), MIN(SAL) FROM EMP
GROUP BY JOB, DEPTNO;

SELECT DEPTNO, COUNT(*) FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*) > 3;

SELECT DEPTNO, JOB, AVG(SAL) FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000;

SELECT * FROM EMP;
SELECT * FROM DEPT;

--JOIN
SELECT * 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT * FORM EMP;
SELECT * FORM SALGRADE;

SELECT *
FROM EMP E, SALGRADE S;

SELECT *
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

--자체 조인
SELECT E1.EMPNO, E1.ENAME, E2.ENAME AS "매니저"
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.MGR;

--자체 JOIN 같은 감독의 다른 영화를 찾아주세요
--영화제목, 감독
SELECT * FROM MOVIES;
SELECT M1.TITLE, M2.DIRECTOR
FROM MOVIES M1, MOVIES M2
WHERE M1.DIRECTOR = M2.DIRECTOR
        AND M1.TITLE != M2.TITLE;
        
--연속 개봉 연도 영화를 찾아주세요
--같은 연속된 해에 개봉한 영화를 찾아서 출력해 주세요
SELECT * FROM MOVIES;
SELECT M1.TITLE, M2.TITLE
FROM MOVIES M1, MOVIES M2
WHERE TO_CHAR(M1.RELEASE_DATE, 'YYYY') = TO_CHAR(M2.RELEASE_DATE, 'YYYY')
        AND M1.TITLE !=M2.TITLE;

--LEFT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+);
--RIGHT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO, E2.ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO;

-- NATURAL JOIN
SELECT * 
FROM EMP E NATURAL JOIN DEPT D;

SELECT E.ENAME, DEPTNO, D.DNAME
FROM EMP E NATURAL JOIN DEPT D;

SELECT * FROM EMP;
SELECT * FROM DEPT;

-- [SQL99]JOIN ~ USING
SELECT E.ENAME, DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D USING (DEPTNO);

-- [SQL99] JOIN ~ ON
SELECT * 
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO);

-- [SQL99] LEFT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
FROM EMP E1 LEFT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

-- [SQL99] RIGHT OUTER JOIN
SELECT E1.EMPNO, E1.ENAME, E1.MGR,
        E2.EMPNO AS MGR_EMPNO,
        E2.ENAME AS MGR_ENAME
FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON (E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

--[SQL-99]
SELECT DEPTNO, DNAME, EMPNO, ENAME, SAL
FROM EMP NATURAL JOIN DEPT
WHERE SAL > 2000;

SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D USING (DEPTNO)
WHERE E.SAL > 2000;

SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
WHERE E.SAL > 2000;

--[SQL-99]
SELECT DEPTNO, DNAME, EMPNO, ENAME, SAL
FROM EMP NATURAL JOIN DEPT
WHERE SAL > 2000;

SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D USING (DEPTNO)
WHERE E.SAL > 2000;

SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
WHERE E.SAL > 2000;
--
SELECT DEPTNO, DNAME, ROUND(AVG(SAL),2), MAX(SAL), MIN(SAL), COUNT(SAL)
FROM EMP NATURAL JOIN DEPT
GROUP BY DEPTNO, DNAME;
--
SELECT DEPTNO, EMPNO, ENAME, JOB, SAL
FROM EMP NATURAL JOIN DEPT
ORDER BY DEPTNO ASC, ENAME ASC;

--사원 이름이 'JONES' 사원의 급여는?
SELECT SAL FROM EMP
WHERE ENAME = 'JONES';

SELECT * FROM EMP
WHERE SAL > 2975;

SELECT * FROM EMP
WHERE SAL > (SELECT SAL FROM EMP
WHERE ENAME = 'JONES');

--서브쿼리를 사용하여 EMP 테이블의 사원 정보 중에서 사원이름 'ALLEN'인 사원의 추가수당(COMM)보다 많은 추가 수당을 받는 사원의 모두 출력하세요.
SELECT COMM FROM EMP
WHERE ENAME = 'ALLEN'

SELECT ENAME, COMM FROM EMP
WHERE COMM > (SELECT COMM FROM EMP WHERE ENAME = 'ALLEN');

SELECT *
FROM MOVIES
WHERE GENRE = '드라마' AND TO_CHAR(RELEASE_DATE, 'YYYY') = '2015';

SELECT AVG(SAL) FROM EMP;
SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND E.DEPTNO = 20
AND E.SAL >(SELECT AVG(SAL) FROM EMP);

--IN
SELECT * FROM EMP
WHERE DEPTNO IN (20, 30);
--OUT
SELECT * FROM EMP
WHERE SAL = ANY(SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO;

SELECT * FROM EMP WHERE SAL = 3000;

--ALL
SELECT * FROM EMP
WHERE SAL < ALL (SELECT SAL FROM EMP WHERE DEPTNO = 30);

CREATE TABLE DEPT_TEMP 
    AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP;
--삽입
INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (50, 'DATABASE', 'SEOUL');

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (60, '설계', '안동');

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (70, '회로설계', '구미');

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (80, '철강구매', NULL);

DESC DEPT_TEMP;

--저장
COMMIT;


--P272
CREATE TABLE EMP_TEMP
AS SELECT * FROM EMP WHERE 1 <> 1;

SELECT * FROM EMP_TEMP;

--10-9
INSERT INTO EMP_TEMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
    VALUES (9999, '홍길동', 'PRESIDENT', NULL, '2001/01/01',
    5000, 1000, 10);
--10-10
INSERT INTO EMP_TEMP
VALUES (1111, '성춘향', '메니저', 9999, '2001/01/05', 4000, NULL, 20);
--10-15
CREATE TABLE DEPT_TEMP2
AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP2;
COMMIT;

--10-6 UPDATE
UPDATE DEPT_TEMP2
SET LOC = 'SEOUL';

ROLLBACK;

--테이블 삭제
DROP TABLE EMP_TEMP;
--테이블 복사 생성
CREATE TABLE EMP_TEMP;
AS SELECT * FROM EMP;

SELECT * FROM EMP_TEMP
ORDER BY SAL DESC;

--EMP_TEMP 테이블의 사원중에서 급여가 2500 이하인 사원만 추가수당(COMM)
--50으로 수정해 주세요.
SELECT * FROM EMP_TEMP;
UPDATE EMP_TEMP
SET COMM = 50
WHERE SAL <= 2500;













