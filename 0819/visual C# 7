namespace WorkThread01
{
    internal class Program
    {
        //스레드 동기화
        private static readonly object lockObject = new object();
        static void Main(string[] args)
        {
            //Main Thread --> 사장님!!!
            int threadCount = 5;    //일꾼 5명 불러봅니다.

            Thread[] threads = new Thread[threadCount];

            for (int i = 0; i < threadCount; i++)
            {
                int threadIndex = i;
                threads[i] = new Thread(() => DoWork(threadIndex));
                threads[i].Start();
            }
            foreach(Thread thread in threads)
                thread.Join();  //스레드 기다리기
            Console.WriteLine("모든 작업이 완료되었습니다.");
        }

        static void DoWork(int index)
        {
            lock (lockObject)
            {
                Console.WriteLine($"스레드{index} 시작 : 작업을 수행 중...");
            }

            Thread.Sleep(1000);

            lock (lockObject)
            {
                Console.WriteLine($"스레드{index} 완료 : 작업이 끝났습니다.");

            }
        }
    }
}

