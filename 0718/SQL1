SELECT REPLACE('010-1111-1111','-','*') from DUAL
​

--SELECT ENAME, SAL, NVL(COMM, 0) FROM EMP;
--SELECT ENAME, SAL, NVL2(COMM, 'O', 'X') FROM EMP;
​

SELECT EMPNO, ENAME, JOB, SAL,
    DECODE(JOB, 'MANAGER', SAL*1.1,
                'SALESMAN', SAL * 1.05, 
                'ANALYST',SAL,
                SAL * 1.03) AS UPSAL
FROM EMP;
​

--CASE문을 사용해봅시다.
SELECT EMPNO, ENAME, JOB, SAL,
    CASE JOB
        WHEN 'MANAGER' THEN SAL*1.1
        WHEN 'SALESMAN' THEN SAL*1.05
        WHEN 'ANALYST' THEN SAL
        ELSE SAL*1.03
    END AS UPSAL
FROM EMP;
​

SELECT EMPNO, ENAME, SAL,
    CASE
        WHEN SAL >= 3000 THEN '상위권'
        WHEN SAL > 1000 AND SAL < 3000 THEN '중위권'
        ELSE '하위권'
    END AS 급여수준
FROM EMP;
​

SELECT EMPNO, ENAME, HIREDATE,
        TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3),'월요일'), 'YYYY-MM-DD') AS "정직원 되는날",
        NVL2(COMM, TO_CHAR(COMM), 'N/A')
FROM EMP;
​

SELECT EMPNO, ENAME, MGR,
    CASE
        WHEN MGR IS NULL THEN TO_CHAR('0000') 
        WHEN SUBSTR(MGR, 1, 2)= 75 THEN TO_CHAR('5555')
        WHEN SUBSTR(MGR, 1, 2)= 76 THEN TO_CHAR('6666')
        WHEN SUBSTR(MGR, 1, 2)= 77 THEN TO_CHAR('7777')
        WHEN SUBSTR(MGR, 1, 2)= 78 THEN TO_CHAR('8888')
        ELSE TO_CHAR(MGR)
    END AS CHG_MGR
FROM EMP;
​

SELECT ROUND(AVG(SAL), 2) FROM EMP

WHERE DEPTNO = 30;
​

SELECT DEPTNO, ROUND(AVG(SAL),2) FROM EMP;
​

SELECT DEPTNO, SUM(SAL) FROM EMP
GROUP BY DEPTNO;
​

SELECT SUM(DESTINCT SAL),
        SUM(ALL SAL),
        SUM(SAL)
FROM EMP;
​

SELECT COUNT(*) FROM EMP;
​

SELECT DEPTNO, COUNT(*) FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;
​

SELECT MAX(SAL) FROM EMP
WHERE DEPTNO = 20;

SELECT * FROM EMP WHERE DEPTNO = 20;
​

SELECT MAX(HIREDATE)FROM EMP
WHERE DEPTNO=20;
​

SELECT MIN(HIREDATE)FROM EMP
WHERE DEPTNO=20;
​

SELECT DEPTNO, JOB, ROUND(AVG(SAL),2) FROM EMP
GROUP BY DEPTNO,JOB
HAVING ROUND(AVG(SAL),2) >= 2000
ORDER BY DEPTNO, JOB;
​

SELECT DEPTNO, JOB, AVG(SAL) FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;
​

SELECT ROUND(AVG(SAL),0), MAX(SAL), MIN(SAL), COUNT(*) FROM EMP;
​

SELECT DEPTNO,
        ROUND(AVG(SAL),0), MAX(SAL), MIN(SAL), COUNT(*)
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO ASC;
​

SELECT JOB,
        COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(*) >= 3
ORDER BY JOB DESC;
​

SELECT SUBSTR(HIREDATE, 1, 2), COUNT(*), DEPTNO
FROM EMP
GROUP BY SUBSTR(HIREDATE, 1, 2), DEPTNO;
​

SELECT TO_CHAR(HIREDATE, 'YYYY'), COUNT(*), DEPTNO
FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO
ORDER BY TO_CHAR(HIREDATE, 'YYYY');
​

SELECT GENRE,
        COUNT(*)
FROM MOVIES
GROUP BY GENRE
ORDER BY COUNT(*) DESC;
​

SELECT TITLE FROM MOVIES
WHERE RUNTIME >= 130;
​

SELECT
        SUM(CASE
                WHEN RELEASE_DATE <= TO_DATE('2014-12-31', 'YYYY-MM-DD') THEN 1
                ELSE 0
            END) AS "2014 이전",
        SUM(CASE
                WHEN RELEASE_DATE >= TO_DATE('2015-01-01', 'YYYY-MM-DD') THEN 1
                ELSE 0
            END) AS "2015 이후"
FROM MOVIES;
​

SELECT AVG(RUNTIME) FROM MOVIES;
​

DESC MOVIES

SELECT MIN(RUNTIME) FROM MOVIES;

SELECT TITLE, RUNTIME FROM MOVIES
WHERE RUNTIME = 112;
​

SELECT TITLE, RUNTIME FROM MOVIES
WHERE RUNTIME = (SELECT MIN(RUNTIME) FROM MOVIES) OR RUNTIME = (SELECT MAX(RUNTIME) FROM MOVIES);


SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;


SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), ROUND(AVG(SAL),2)
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);

