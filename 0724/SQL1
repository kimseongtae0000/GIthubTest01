DECLARE
BEGIN
    FOR I IN 0..10 LOOP
        IF MOD(I, 3) = 0 THEN
            DBMS_OUTPUT.PUT_LINE('출력 : ' || I);
        END IF;
    END LOOP;
END;
/

DECLARE
BEGIN
    FOR I IN REVERSE 0..4 LOOP
        DBMS_OUTPUT.PUT_LINE('현재 I의 값 : ' || I);
    END LOOP;
END;
/

--16-21 FOR LOOP 안에 CINTINUE
BEGIN
    FOR I IN 0..4 LOOP
        CONTINUE WHEN MOD(I,2) = 1;
        DBMS_OUTPUT.PUT_LINE(I);
    END LOOP;
END;
/

--17-1 레코드를 정의해서 사용하기
DECLARE
    TYPE REC_DEPT IS RECORD(
        deptno NUMBER(2) NOT NULL := 99,
        dname DEPT.DNAME%TYPE,
        loc DEPT.LOC%TYPE
    );
    dept_rec REC_DEPT;
BEGIN
    dept_rec.deptno := 99;
    dept_rec.dname := 'DATABASE';
    dept_rec.loc := 'SEOUL';
    DBMS_OUTPUT.PUT_LINE(dept_rec.deptno);
    DBMS_OUTPUT.PUT_LINE(dept_rec.dname);
    DBMS_OUTPUT.PUT_LINE(dept_rec.loc);
END;
/

--17-2 DEPT_RECORD
CREATE TABLE DEPT_RECORD
AS SELECT * FROM DEPT;

SELECT * FROM DEPT_RECORD;
COMMIT;

--17-2
DECLARE
    TYPE REC_DEPT IS RECORD(
        deptno NUMBER(2) NOT NULL := 99,
        dname DEPT.DNAME%TYPE,
        loc DEPT.LOC%TYPE
    );
    dept_rec REC_DEPT;  --객체선언
BEGIN
    dept_rec.deptno := 99;
    dept_rec.dname := 'DATABASE';
    dept_rec.loc := 'SEOUL';
    
    INSERT INTO DEPT_RECORD
    VALUES dept_rec;
END;
/

--17-3
DECLARE
    TYPE REC_DEPT IS RECORD(
        deptno NUMBER(2) NOT NULL := 10,
        dname DEPT.DNAME%TYPE,
        loc DEPT.LOC%TYPE
    );
    deptrecord DEPTREC;  --객체선언
BEGIN
    deptrecord.deptno := 88;
    deptrecord.dname := '연구';
    deptrecord.loc := '구미';
    
    INSERT INTO DEPT_RECORD
    VALUES deptrecord;
END;
/

DESC DEPT_RECORD;

DECLARE
    TYPE REC_DEPT IS RECORD(
        deptno NUMBER(2) NOT NULL := 0,
        dname DEPT.DNAME%TYPE,
        loc DEPT.LOC%TYPE
    );
    deptrecord DEPTREC;  --객체선언
BEGIN
    deptrecord.deptno := 50;
    deptrecord.dname := 'DB';
    deptrecord.loc := 'ANDONG';
    
    UPDATE DEPT_RECORD
    SET ROW = deptrecord
    WHERE DEPTNO = 99;
END;
/

-- 사용자 사전
SELECT * FROM DICT;
SELECT COUNT(*) FROM DICT;
SELECT * FROM DICTIONARY;
SELECT COUNT(*) FROM DICTIONARY;

--사용자 산전(USER_%)
SELECT TABLE_NAME FROM USER_TABLES
ORDER BY TABLE_NAME;

--ALL_%
SELECT * FROM ALL_TABLES;
SELECT OWNER, TABLE_NAME FROM ALL_TABLES;














